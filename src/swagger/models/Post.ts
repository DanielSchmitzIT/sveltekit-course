/* tslint:disable */
/* eslint-disable */
/**
 * Blog - for Svelte Course
 * Svelte Blog
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Category,
    CategoryFromJSON,
    CategoryFromJSONTyped,
    CategoryToJSON,
} from './';

/**
 * 
 * @export
 * @interface Post
 */
export interface Post {
    /**
     * 
     * @type {number}
     * @memberof Post
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Post
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Post
     */
    teaser: string;
    /**
     * 
     * @type {string}
     * @memberof Post
     */
    text: string;
    /**
     * 
     * @type {object}
     * @memberof Post
     */
    image: object;
    /**
     * 
     * @type {Date}
     * @memberof Post
     */
    publishedAt: Date;
    /**
     * 
     * @type {Category}
     * @memberof Post
     */
    category: Category;
    /**
     * 
     * @type {boolean}
     * @memberof Post
     */
    published: boolean;
    /**
     * 
     * @type {object}
     * @memberof Post
     */
    user: object;
    /**
     * 
     * @type {object}
     * @memberof Post
     */
    views: object;
}

export function PostFromJSON(json: any): Post {
    return PostFromJSONTyped(json, false);
}

export function PostFromJSONTyped(json: any, ignoreDiscriminator: boolean): Post {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'teaser': json['teaser'],
        'text': json['text'],
        'image': json['image'],
        'publishedAt': (new Date(json['publishedAt'])),
        'category': CategoryFromJSON(json['category']),
        'published': json['published'],
        'user': json['user'],
        'views': json['views'],
    };
}

export function PostToJSON(value?: Post | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'teaser': value.teaser,
        'text': value.text,
        'image': value.image,
        'publishedAt': (value.publishedAt.toISOString()),
        'category': CategoryToJSON(value.category),
        'published': value.published,
        'user': value.user,
        'views': value.views,
    };
}

