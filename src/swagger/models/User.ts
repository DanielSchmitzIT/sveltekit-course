/* tslint:disable */
/* eslint-disable */
/**
 * Blog - for Svelte Course
 * Svelte Blog
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Image,
    ImageFromJSON,
    ImageFromJSONTyped,
    ImageToJSON,
} from './';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {number}
     * @memberof User
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    street: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    streetNr: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    zip: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    city: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    country: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    password: string;
    /**
     * 
     * @type {object}
     * @memberof User
     */
    posts: object;
    /**
     * 
     * @type {object}
     * @memberof User
     */
    categories: object;
    /**
     * 
     * @type {object}
     * @memberof User
     */
    views: object;
    /**
     * 
     * @type {object}
     * @memberof User
     */
    role: object;
    /**
     * 
     * @type {Array<User>}
     * @memberof User
     */
    subUsers: Array<User>;
    /**
     * 
     * @type {User}
     * @memberof User
     */
    mainUser: User;
    /**
     * 
     * @type {Array<Image>}
     * @memberof User
     */
    images: Array<Image>;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'firstName': json['firstName'],
        'email': json['email'],
        'username': json['username'],
        'lastName': json['lastName'],
        'street': json['street'],
        'streetNr': json['streetNr'],
        'zip': json['zip'],
        'city': json['city'],
        'country': json['country'],
        'password': json['password'],
        'posts': json['posts'],
        'categories': json['categories'],
        'views': json['views'],
        'role': json['role'],
        'subUsers': ((json['subUsers'] as Array<any>).map(UserFromJSON)),
        'mainUser': UserFromJSON(json['mainUser']),
        'images': ((json['images'] as Array<any>).map(ImageFromJSON)),
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'firstName': value.firstName,
        'email': value.email,
        'username': value.username,
        'lastName': value.lastName,
        'street': value.street,
        'streetNr': value.streetNr,
        'zip': value.zip,
        'city': value.city,
        'country': value.country,
        'password': value.password,
        'posts': value.posts,
        'categories': value.categories,
        'views': value.views,
        'role': value.role,
        'subUsers': ((value.subUsers as Array<any>).map(UserToJSON)),
        'mainUser': UserToJSON(value.mainUser),
        'images': ((value.images as Array<any>).map(ImageToJSON)),
    };
}

